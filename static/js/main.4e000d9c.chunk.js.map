{"version":3,"sources":["components/ExpenseDate.js","components/Card.js","components/ExpenseItem.js","components/ExpenseFilter.js","components/ChartBar.js","components/Chart.js","components/NewExp/ExpensesChart.js","components/Expenses.js","components/NewExp/ExpenseForm.js","components/NewExp/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","lassName","Card","classes","children","ExpenseItem","useState","title","setTitle","type","amount","onClick","ExpensesFilter","onChange","event","onChangedFilter","target","value","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","item","filter","toString","selected","selectedYear","id","ExpenseForm","origTitle","origAmount","setAmount","origDate","setDate","origType","setType","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","name","required","min","step","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"0aAgBeA,MAdf,SAAqBC,GACnB,IAAMC,EAAQD,EAAME,KAAKC,eAAe,QAAS,CAAEF,MAAO,SACpDG,EAAMJ,EAAME,KAAKC,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOL,EAAME,KAAKI,cAExB,OACE,sBAAKC,UAAU,eAAf,UACE,qBAAKA,UAAU,uBAAf,SAAuCN,IACvC,qBAAKO,SAAS,qBAAd,SAAoCJ,IACpC,qBAAKI,SAAS,sBAAd,SAAqCH,Q,MCH5BI,MANf,SAAcT,GACZ,IAAMU,EAAO,eAAWV,EAAMO,WAE9B,OAAO,qBAAKA,UAAWG,EAAhB,SAA0BV,EAAMW,YCqB1BC,MArBf,SAAqBZ,GACnB,MAA0Ba,mBAASb,EAAMc,OAAzC,mBAAOA,EAAP,KAAcC,EAAd,KAMA,OACE,eAAC,EAAD,CAAMR,UAAU,eAAhB,UACE,cAAC,EAAD,CAAaL,KAAMF,EAAME,OACzB,sBAAKK,UAAU,4BAAf,UACE,+BACGO,EADH,IACU,4BAAId,EAAMgB,UAEpB,sBAAKT,UAAU,sBAAf,cAAuCP,EAAMiB,aAE/C,wBAAQC,QAbS,WACnBH,EAAS,YAYP,8BCGSI,G,MApBQ,SAACnB,GAKtB,OACE,qBAAKO,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQa,SARQ,SAACC,GACrBrB,EAAMsB,gBAAgBD,EAAME,OAAOC,QAO/B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4B,OCKKC,G,YApBE,SAACzB,GAChB,IAAI0B,EAAgB,KAMpB,OAJI1B,EAAM2B,SAAW,IACnBD,EAAgBE,KAAKC,MAAO7B,EAAMwB,MAAQxB,EAAM2B,SAAY,KAAO,KAInE,sBAAKpB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVuB,MAAO,CAAEC,OAAQL,OAGrB,qBAAKnB,UAAU,mBAAf,SAAmCP,EAAMgC,aCKhCC,MAnBf,SAAejC,GACb,IAAMkC,EAAkBlC,EAAMmC,WAAWC,KAAI,SAACC,GAAD,OAAeA,EAAUb,SAEhEc,EAAeV,KAAKW,IAAL,MAAAX,KAAI,YAAQM,IAEjC,OACE,qBAAK3B,UAAU,QAAf,SACGP,EAAMmC,WAAWC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEEb,MAAOa,EAAUb,MACjBG,SAAUW,EACVN,MAAOK,EAAUL,OAHZK,EAAUL,aCcVQ,EAxBO,SAACxC,GACrB,IAD+B,EACzByC,EAAkB,CACtB,CAAET,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,GACvB,CAAEQ,MAAO,MAAOR,MAAO,IAbM,cAgBTxB,EAAM0C,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BC,EAA2B,QAEpCF,EADqBE,EAAQzC,KAAK0C,YACJpB,OAASmB,EAAQ1B,QAlBlB,8BAqB/B,OAAO,cAAC,EAAD,CAAOkB,WAAYM,KCiBbI,MAjCf,SAAkB7C,GAChB,MAAwCa,mBAAS,QAAjD,mBAAOiC,EAAP,KAAqBC,EAArB,KAMMC,EAAmBhD,EAAMiD,KAAKC,QAAO,SAACP,GAC1C,OAAOA,EAAQzC,KAAKI,cAAc6C,aAAeL,KAGnD,OACE,8BACE,eAAC,EAAD,CAAMvC,UAAU,WAAhB,UACE,cAAC,EAAD,CACE6C,SAAUN,EACVxB,gBAbqB,SAAC+B,GAC5BN,EAAgBM,MAcZ,cAAC,EAAD,CAAeX,SAAUM,IACxBhD,EAAMiD,KAAKb,KAAI,SAACO,GAAD,OACd,cAAC,EAAD,CAEE7B,MAAO6B,EAAQ7B,MACfG,OAAQ0B,EAAQ1B,OAChBD,KAAM2B,EAAQ3B,KACdd,KAAMyC,EAAQzC,MAJTyC,EAAQW,a,OC4DVC,G,YApFK,SAACvD,GACnB,MAA8Ba,mBAAS,IAAvC,mBAAO2C,EAAP,KAAkBzC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAO4C,EAAP,KAAmBC,EAAnB,KACA,EAA4B7C,mBAAS,IAArC,mBAAO8C,EAAP,KAAiBC,EAAjB,KACA,EAA4B/C,mBAAS,IAArC,mBAAOgD,EAAP,KAAiBC,EAAjB,KAkCA,OACE,uBAAMC,SAjBc,SAAC1C,GACrBA,EAAM2C,iBAEN,IAAMC,EAAc,CAClBnD,MAAO0C,EACPvC,QAASwC,EACTvD,KAAM,IAAIgE,KAAKP,GACf3C,KAAM6C,GAGR7D,EAAMmE,kBAAkBF,GACxBlD,EAAS,IACT2C,EAAU,IACVE,EAAQ,KAIR,UACE,sBAAKrD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,0CACA,uBAAOS,KAAK,OAAOQ,MAAOgC,EAAWpC,SArCxB,SAACC,GACpBN,EAASM,EAAME,OAAOC,aAsClB,sBAAKjB,UAAU,uBAAf,UACE,oDACA,yBAAQ6D,KAAK,OAAOC,UAAQ,EAACjD,SA7BjB,SAACC,GACnByC,EAAQzC,EAAME,OAAOC,QA4Bf,UACE,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,4BAGJ,sBAAKjB,UAAU,uBAAf,UACE,2CACA,uBACES,KAAK,SACLsD,IAAI,OACJC,KAAK,OACL/C,MAAOiC,EACPrC,SAlDY,SAACC,GACrBqC,EAAUrC,EAAME,OAAOC,aAoDnB,sBAAKjB,UAAU,uBAAf,UACE,yCACA,uBACES,KAAK,OACLsD,IAAI,aACJ/B,IAAI,aACJf,MAAOmC,EACPvC,SAxDU,SAACC,GACnBuC,EAAQvC,EAAME,OAAOC,gBA2DnB,sBAAKjB,UAAU,uBAAf,UACE,wBAAQS,KAAK,SAASE,QAASlB,EAAMwE,SAArC,oBAGA,wBAAQxD,KAAK,SAAb,iCC3COyD,EAnCI,SAACzE,GAClB,MAAkCa,oBAAS,GAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KAmBA,OACE,sBAAKpE,UAAU,cAAf,WACImE,GACA,wBAAQxD,QAXe,WAC3ByD,GAAa,IAUT,6BAEDD,GACC,cAAC,EAAD,CACEP,kBAxBgB,SAACS,GACvB,IAAMX,EAAW,2BACZW,GADY,IAEftB,GAAI1B,KAAKiD,SAAS1B,aAEpBnD,EAAM8E,aAAab,GACnBU,GAAa,IAmBPH,SAZmB,WACzBG,GAAa,UCjBXI,EAAQ,CACZ,CACEzB,GAAI,KACJxC,MAAO,eACPE,KAAM,YACNC,OAAQ,MACRf,KAAM,IAAIgE,KAAK,KAAM,EAAG,KAE1B,CACEZ,GAAI,KACJxC,MAAO,SACPE,KAAM,WACNC,OAAQ,OACRf,KAAM,IAAIgE,KAAK,KAAM,EAAG,KAE1B,CACEZ,GAAI,KACJxC,MAAO,gBACPE,KAAM,QACNC,OAAQ,OACRf,KAAM,IAAIgE,KAAK,KAAM,EAAG,KAE1B,CACEZ,GAAI,KACJxC,MAAO,oBACPE,KAAM,WACNC,OAAQ,IACRf,KAAM,IAAIgE,KAAK,KAAM,EAAG,MAqBbc,MAjBf,WACE,MAAgCnE,mBAASkE,GAAzC,mBAAOrC,EAAP,KAAiBuC,EAAjB,KAQA,OACE,gCACE,cAAC,EAAD,CAAYH,aARU,SAACnC,GACzBsC,GAAY,SAACC,GACX,MAAM,CAAEvC,GAAR,mBAAoBuC,UAOpB,cAAC,EAAD,CAAUjC,KAAMP,QC1CTyC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAO,cAAC,EAAD,O","file":"static/js/main.4e000d9c.chunk.js","sourcesContent":["import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\".expense-date__month\">{month}</div>\n      <div lassName=\".expense-date__day\">{day}</div>\n      <div lassName=\".expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = `card ${props.className}`;\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"./Card\";\n\nfunction ExpenseItem(props) {\n  const [title, setTitle] = useState(props.title);\n\n  const clickHandler = () => {\n    setTitle(\"Updated\");\n  };\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>\n          {title} <p>{props.type}</p>\n        </h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const filterChanged = (event) => {\n    props.onChangedFilter(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select onChange={filterChanged}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nfunction Chart(props) {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Chart;\n","import Chart from \"../Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"./Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport { useState } from \"react\";\nimport ExpensesChart from \"./NewExp/ExpensesChart\";\n\nfunction Expenses(props) {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangedHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.item.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          onChangedFilter={filterChangedHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        {props.item.map((expense) => (\n          <ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            type={expense.type}\n            date={expense.date}\n          />\n        ))}\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [origTitle, setTitle] = useState(\"\");\n  const [origAmount, setAmount] = useState(\"\");\n  const [origDate, setDate] = useState(\"\");\n  const [origType, setType] = useState(\"\");\n\n  const titleChanged = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const amountChanged = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const dateChanged = (event) => {\n    setDate(event.target.value);\n  };\n\n  const typeChanged = (event) => {\n    setType(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: origTitle,\n      amount: +origAmount,\n      date: new Date(origDate),\n      type: origType,\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={origTitle} onChange={titleChanged} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Type of Expense</label>\n          <select name=\"Type\" required onChange={typeChanged}>\n            <option value=\"Necessity\">Necessity</option>\n            <option value=\"Bills\">Bills</option>\n            <option value=\"Shopping\">Shopping</option>\n          </select>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            value={origAmount}\n            onChange={amountChanged}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2022-01-01\"\n            max=\"2025-12-31\"\n            value={origDate}\n            onChange={dateChanged}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import \"./NewExpense.css\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useState } from \"react\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const saveExpenseData = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandller = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && (\n        <button onClick={startEditingHandller}>Add New Expense</button>\n      )}\n      {isEditing && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseData}\n          onCancel={stopEditingHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses\";\nimport NewExpense from \"./components/NewExp/NewExpense\";\nimport { useState } from \"react\";\n\nconst DUMMY = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    type: \"Necessity\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    type: \"Shopping\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    type: \"Bills\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    type: \"Shopping\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}